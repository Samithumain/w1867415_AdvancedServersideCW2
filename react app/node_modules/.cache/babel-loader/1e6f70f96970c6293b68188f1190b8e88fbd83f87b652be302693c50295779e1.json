{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Work\\\\UNI\\\\serverside CW2\\\\w1867415_AdvancedServersideCW2\\\\react app\\\\src\\\\pages\\\\Viewblog.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { format } from 'date-fns';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewBlog = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [blogs, setBlogs] = useState({\n    mostRecent: [],\n    mostLiked: [],\n    mostPopular: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState({\n    postCount: 5,\n    sortBy: 'recent',\n    country: '',\n    searchQuery: ''\n  });\n  const countries = ['USA', 'Canada', 'UK', 'Japan', 'Australia', 'France', 'Germany'];\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      let url = \"\";\n      const {\n        searchQuery,\n        country,\n        postCount,\n        sortBy\n      } = filters;\n      if (searchQuery) {\n        url = `http://localhost:5000/api/blog/search?search=${searchQuery}&limit=${postCount}&email=${encodeURIComponent(user.email)}`;\n      } else if (country) {\n        url = `http://localhost:5000/api/blog/country?country=${country}&limit=${postCount}&email=${encodeURIComponent(user.email)}`;\n      } else {\n        url = `http://localhost:5000/api/blog/fetch?limit=${postCount}&email=${encodeURIComponent(user.email)}`;\n      }\n      try {\n        setLoading(true);\n        const res = await fetch(url, {\n          method: 'GET',\n          headers: {\n            'authorization': `Bearer ${user.token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await res.json();\n        // Save each category of blogs separately\n        setBlogs(data);\n      } catch (e) {\n        console.error('Error loading blogs:', e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBlogs();\n  }, [filters]);\n  const handleAuthorClick = (e, authorId, username) => {\n    e.preventDefault();\n    console.log(`Author clicked - ID: ${authorId}, Username: ${username}`);\n    navigate(`/authors/${authorId}/${username}`);\n  };\n  const handleReaction = async (blogId, reaction) => {\n    if (!user) return;\n    window.alert(\"blogid: \" + blogId);\n    try {\n      const response = await fetch(`http://localhost:5000/api/blog/reaction?blogId=${blogId}&reaction=${reaction}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${user.token}`\n        },\n        body: JSON.stringify({\n          email: user.email\n        })\n      });\n      const data = await response.json();\n      setBlogs(prevBlogs => {\n        const updatedBlogs = {\n          ...prevBlogs\n        };\n        const listKey = filters.sortBy === 'recent' ? 'mostRecent' : filters.sortBy === 'popular' ? 'mostPopular' : 'mostLiked';\n        updatedBlogs[listKey] = updatedBlogs[listKey].map(blog => {\n          if (blog.id === blogId) {\n            window.alert(data.likes);\n            window.alert(data.dislikes);\n            //  window.alert(blog.dislikes.length + 1)\n            //  window.alert(blog.dislikes.length)\n            return {\n              ...blog,\n              userReaction: reaction,\n              likes: data.likes,\n              dislikes: data.dislikes\n            };\n          }\n          return blog;\n        });\n        return updatedBlogs;\n      });\n    } catch (error) {\n      console.error(`Error ${reaction} blog:`, error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: filters.postCount,\n        onChange: e => setFilters({\n          ...filters,\n          postCount: e.target.value\n        }),\n        children: [3, 5, 10, 15, 20].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: num,\n          children: [\"Show \", num, \" posts\"]\n        }, num, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filters.sortBy,\n        onChange: e => setFilters({\n          ...filters,\n          sortBy: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"recent\",\n          children: \"Most Recent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"popular\",\n          children: \"Most Popular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"most_liked\",\n          children: \"Most Liked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filters.country,\n        onChange: e => setFilters({\n          ...filters,\n          country: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Countries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country,\n          children: country\n        }, country, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search blogs...\",\n        value: filters.searchQuery,\n        onChange: e => setFilters({\n          ...filters,\n          searchQuery: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading blogs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-list\",\n      children: [filters.sortBy === 'recent' && blogs.mostRecent.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Posted by: \", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: e => handleAuthorClick(e, blog.author_id, blog.author_username),\n            className: \"author-link\",\n            children: blog.author_username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83D\\uDCCD \", blog.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83D\\uDDD3 \", format(new Date(blog.visit_date), 'MMMM yyyy')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [blog.content.substring(0, 200), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reaction-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReaction(blog.id, 'like'),\n            className: `${blog.userReaction === 'like' ? 'active' : ''} ${blog.likestatus === 2 ? 'disabled' : ''}`,\n            children: [\"\\uD83D\\uDC4D \", blog.likes.length || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReaction(blog.id, 'dislike'),\n            className: `${blog.userReaction === 'dislike' ? 'active' : ''} ${blog.likestatus === 2 ? 'disabled' : ''}`,\n            children: [\"\\uD83D\\uDC4E \", blog.dislikes.length || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this)]\n      }, blog.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)), filters.sortBy === 'popular' && blogs.mostPopular.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Posted by: \", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: e => handleAuthorClick(e, blog.author_id, blog.author_username),\n            className: \"author-link\",\n            children: blog.author_username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83D\\uDCCD \", blog.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83D\\uDDD3 \", format(new Date(blog.visit_date), 'MMMM yyyy')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [blog.content.substring(0, 200), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reaction-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReaction(blog.id, 'like'),\n            className: `${blog.userReaction === 'like' ? 'active' : ''} ${blog.likestatus === 1 ? 'disabled' : ''}`,\n            children: [\"\\uD83D\\uDC4D \", blog.likes.length || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReaction(blog.id, 'dislike'),\n            className: `${blog.userReaction === 'dislike' ? 'active' : ''} ${blog.likestatus === 2 ? 'disabled' : ''}`,\n            children: [\"\\uD83D\\uDC4E \", blog.dislikes.length || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this)]\n      }, blog.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this)), filters.sortBy === 'most_liked' && blogs.mostLiked.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Posted by: \", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: e => handleAuthorClick(e, blog.author_id, blog.author_username),\n            className: \"author-link\",\n            children: blog.author_username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83D\\uDCCD \", blog.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83D\\uDDD3 \", format(new Date(blog.visit_date), 'MMMM yyyy')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [blog.content.substring(0, 200), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reaction-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReaction(blog.id, 'like'),\n            className: `${blog.userReaction === 'like' ? 'active' : ''} ${blog.likestatus === 1 ? 'disabled' : ''}`,\n            children: [\"\\uD83D\\uDC4D \", blog.likes.length || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReaction(blog.id, 'dislike'),\n            className: `${blog.userReaction === 'dislike' ? 'active' : ''} ${blog.likestatus === 2 ? 'disabled' : ''}`,\n            children: [\"\\uD83D\\uDC4E \", blog.dislikes.length || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }, this)]\n      }, blog.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewBlog, \"Px7Wf8WMk/qlHgqsYKqVcZEPrRE=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = ViewBlog;\nexport default ViewBlog;\nvar _c;\n$RefreshReg$(_c, \"ViewBlog\");","map":{"version":3,"names":["useState","useEffect","useAuth","format","useNavigate","jsxDEV","_jsxDEV","ViewBlog","_s","navigate","user","blogs","setBlogs","mostRecent","mostLiked","mostPopular","loading","setLoading","filters","setFilters","postCount","sortBy","country","searchQuery","countries","fetchBlogs","url","encodeURIComponent","email","res","fetch","method","headers","token","data","json","e","console","error","handleAuthorClick","authorId","username","preventDefault","log","handleReaction","blogId","reaction","window","alert","response","body","JSON","stringify","prevBlogs","updatedBlogs","listKey","map","blog","id","likes","dislikes","userReaction","className","children","value","onChange","target","num","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","title","href","onClick","author_id","author_username","Date","visit_date","content","substring","likestatus","length","_c","$RefreshReg$"],"sources":["C:/Users/USER/Work/UNI/serverside CW2/w1867415_AdvancedServersideCW2/react app/src/pages/Viewblog.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { format } from 'date-fns';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ViewBlog = () => {\r\n    const navigate = useNavigate();\r\n\r\n\r\n  const { user } = useAuth();\r\n  const [blogs, setBlogs] = useState({ mostRecent: [], mostLiked: [], mostPopular: [] });\r\n  const [loading, setLoading] = useState(true);\r\n  const [filters, setFilters] = useState({\r\n    postCount: 5,\r\n    sortBy: 'recent',\r\n    country: '',\r\n    searchQuery: ''\r\n  });\r\n\r\n  const countries = ['USA', 'Canada', 'UK', 'Japan', 'Australia', 'France', 'Germany'];\r\n\r\n  useEffect(() => {\r\n    const fetchBlogs = async () => {\r\n      let url = \"\";\r\n      const { searchQuery, country, postCount, sortBy } = filters;\r\n\r\n      if (searchQuery) {\r\n        url = `http://localhost:5000/api/blog/search?search=${searchQuery}&limit=${postCount}&email=${encodeURIComponent(user.email)}`;\r\n      } else if (country) {\r\n        url = `http://localhost:5000/api/blog/country?country=${country}&limit=${postCount}&email=${encodeURIComponent(user.email)}`;\r\n      } else {\r\n        url = `http://localhost:5000/api/blog/fetch?limit=${postCount}&email=${encodeURIComponent(user.email)}`;\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        const res = await fetch(url, {\r\n            method: 'GET', \r\n            headers: {\r\n              'authorization': `Bearer ${user.token}`, \r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n          \r\n          const data = await res.json();\r\n          // Save each category of blogs separately\r\n          setBlogs(data); \r\n      } catch (e) {\r\n        console.error('Error loading blogs:', e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBlogs();\r\n  }, [filters]);\r\n\r\n\r\n  const handleAuthorClick = (e, authorId, username) => {\r\n\r\n    e.preventDefault();\r\n    \r\n    console.log(`Author clicked - ID: ${authorId}, Username: ${username}`);\r\n    \r\n    \r\n    navigate(`/authors/${authorId}/${username}`);\r\n  };\r\n\r\n  const handleReaction = async (blogId, reaction) => {\r\n\r\n    if (!user) return;\r\n    window.alert(\"blogid: \" + blogId);\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/blog/reaction?blogId=${blogId}&reaction=${reaction}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${user.token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          email: user.email,\r\n        }),\r\n      });\r\nconst data = await response.json();\r\n\r\n      setBlogs((prevBlogs) => {\r\n        const updatedBlogs = { ...prevBlogs };\r\n      \r\n        const listKey = \r\n          filters.sortBy === 'recent' ? 'mostRecent' :\r\n          filters.sortBy === 'popular' ? 'mostPopular' :\r\n          'mostLiked';\r\n      \r\n        updatedBlogs[listKey] = updatedBlogs[listKey].map(blog => {\r\n          if (blog.id === blogId) {\r\n           window.alert(data.likes)\r\n           window.alert(data.dislikes)      \r\n          //  window.alert(blog.dislikes.length + 1)\r\n          //  window.alert(blog.dislikes.length)\r\n            return {\r\n              \r\n              ...blog,\r\n              userReaction: reaction,\r\n            likes:data.likes,\r\n              dislikes: data.dislikes,\r\n            };\r\n          }\r\n          return blog;\r\n        });\r\n      \r\n        return updatedBlogs;\r\n      });\r\n    } catch (error) {\r\n      console.error(`Error ${reaction} blog:`, error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"blog-container\">\r\n      <div className=\"filter-section\">\r\n        <select\r\n          value={filters.postCount}\r\n          onChange={(e) => setFilters({...filters, postCount: e.target.value})}\r\n        >\r\n          {[3, 5, 10, 15, 20].map(num => (\r\n            <option key={num} value={num}>Show {num} posts</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          value={filters.sortBy}\r\n          onChange={(e) => setFilters({...filters, sortBy: e.target.value})}\r\n        >\r\n          <option value=\"recent\">Most Recent</option>\r\n          <option value=\"popular\">Most Popular</option>\r\n          <option value=\"most_liked\">Most Liked</option>\r\n        </select>\r\n\r\n        <select\r\n          value={filters.country}\r\n          onChange={(e) => setFilters({...filters, country: e.target.value})}\r\n        >\r\n          <option value=\"\">All Countries</option>\r\n          {countries.map(country => (\r\n            <option key={country} value={country}>{country}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search blogs...\"\r\n          value={filters.searchQuery}\r\n          onChange={(e) => setFilters({...filters, searchQuery: e.target.value})}\r\n        />\r\n      </div>\r\n\r\n      {loading ? (\r\n        <p>Loading blogs...</p>\r\n      ) : (\r\n        <div className=\"blog-list\">\r\n          {/* Render the blogs based on the filter type */}\r\n          {filters.sortBy === 'recent' && blogs.mostRecent.map(blog => (\r\n            <div key={blog.id} className=\"blog-card\">\r\n              <h3>{blog.title}</h3>\r\n              {/* <p>{blog.author_username}</p> */}\r\n      \r\n              <p>\r\n  Posted by: {' '}\r\n  <a \r\n    href=\"#\" \r\n    onClick={(e) => handleAuthorClick(e, blog.author_id, blog.author_username)}\r\n    className=\"author-link\"\r\n  >\r\n    {blog.author_username}\r\n  </a>\r\n</p>\r\n\r\n\r\n\r\n              <div className=\"blog-meta\">\r\n                <span>📍 {blog.country}</span>\r\n                <span>🗓 {format(new Date(blog.visit_date), 'MMMM yyyy')}</span>\r\n              </div>\r\n              <p>{blog.content.substring(0, 200)}...</p>\r\n            \r\n              <div className=\"reaction-buttons\">\r\n                <button\r\n                  onClick={() => handleReaction(blog.id, 'like')}\r\n className={`${\r\n                blog.userReaction === 'like' ? 'active' : ''\r\n              } ${blog.likestatus === 2 ? 'disabled' : ''}`}                  >\r\n                  👍 {blog.likes.length || 0}\r\n                </button>\r\n                <button\r\n                  onClick={() => handleReaction(blog.id, 'dislike')}\r\n        className={`${\r\n                blog.userReaction === 'dislike' ? 'active' : ''\r\n              } ${blog.likestatus === 2 ? 'disabled' : ''}`}                >\r\n                  👎 {blog.dislikes.length || 0}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n          {filters.sortBy === 'popular' && blogs.mostPopular.map(blog => (\r\n            <div key={blog.id} className=\"blog-card\">\r\n              <h3>{blog.title}</h3>\r\n\r\n\r\n              <p>\r\n  Posted by: {' '}\r\n  <a \r\n    href=\"#\" \r\n    onClick={(e) => handleAuthorClick(e, blog.author_id, blog.author_username)}\r\n    className=\"author-link\"\r\n  >\r\n    {blog.author_username}\r\n  </a>\r\n</p>\r\n\r\n\r\n              <div className=\"blog-meta\">\r\n                <span>📍 {blog.country}</span>\r\n                <span>🗓 {format(new Date(blog.visit_date), 'MMMM yyyy')}</span>\r\n              </div>\r\n              <p>{blog.content.substring(0, 200)}...</p>\r\n\r\n              <div className=\"reaction-buttons\">\r\n                <button\r\n                  onClick={() => handleReaction(blog.id, 'like')}\r\n        className={`${\r\n                blog.userReaction === 'like' ? 'active' : ''\r\n              } ${blog.likestatus === 1 ? 'disabled' : ''}`}                >\r\n                  👍 {blog.likes.length || 0}\r\n                </button>\r\n                <button\r\n                  onClick={() => handleReaction(blog.id, 'dislike')}\r\n        className={`${\r\n                blog.userReaction === 'dislike' ? 'active' : ''\r\n              } ${blog.likestatus === 2 ? 'disabled' : ''}`}                >\r\n                  👎 {blog.dislikes.length || 0}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n\r\n        {filters.sortBy === 'most_liked' && blogs.mostLiked.map(blog => (\r\n            <div key={blog.id} className=\"blog-card\">\r\n              <h3>{blog.title}</h3>\r\n\r\n\r\n                <p>\r\n    Posted by: {' '}\r\n    <a \r\n        href=\"#\" \r\n        onClick={(e) => handleAuthorClick(e, blog.author_id, blog.author_username)}\r\n        className=\"author-link\"\r\n    >\r\n        {blog.author_username}\r\n    </a>\r\n    </p>\r\n\r\n\r\n              <div className=\"blog-meta\">\r\n                <span>📍 {blog.country}</span>\r\n                <span>🗓 {format(new Date(blog.visit_date), 'MMMM yyyy')}</span>\r\n              </div>\r\n              <p>{blog.content.substring(0, 200)}...</p>\r\n\r\n              <div className=\"reaction-buttons\">\r\n                <button\r\n                  onClick={() => handleReaction(blog.id, 'like')}\r\n                         className={`${\r\n                blog.userReaction === 'like' ? 'active' : ''\r\n              } ${blog.likestatus === 1 ? 'disabled' : ''}`}\r\n                >\r\n                  👍 {blog.likes.length || 0}\r\n                </button>\r\n                <button\r\n                  onClick={() => handleReaction(blog.id, 'dislike')}\r\n                         className={`${\r\n                blog.userReaction === 'dislike' ? 'active' : ''\r\n              } ${blog.likestatus === 2 ? 'disabled' : ''}`}\r\n                >\r\n                  👎 {blog.dislikes.length || 0}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n\r\n\r\n          {/* Similarly render for other filters like mostLiked */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewBlog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}