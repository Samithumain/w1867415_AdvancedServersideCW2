{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Work\\\\UNI\\\\serverside CW2\\\\react app\\\\src\\\\pages\\\\addblog.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddBlog = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    title: '',\n    content: '',\n    country: '',\n    dateOfVisit: '',\n    userId: user.toke\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/blogs/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: formData.title,\n          content: formData.content,\n          country: formData.country,\n          visit_date: formData.dateOfVisit,\n          author_id: formData.userId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add blog post.');\n      }\n      alert('Blog post added!');\n    } catch (err) {\n      console.error(err);\n      alert('Error adding blog post.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"title\",\n      placeholder: \"Title\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"content\",\n      placeholder: \"Content\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"country\",\n      placeholder: \"Country\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"dateOfVisit\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"userId\",\n      placeholder: \"User ID\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Blog Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AddBlog, \"b2uBXNP04GZZSZqoK8o/jUDbPw8=\", false, function () {\n  return [useAuth];\n});\n_c = AddBlog;\nexport default AddBlog;\nvar _c;\n$RefreshReg$(_c, \"AddBlog\");","map":{"version":3,"names":["React","useState","useAuth","jsxDEV","_jsxDEV","AddBlog","_s","user","formData","setFormData","title","content","country","dateOfVisit","userId","toke","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","visit_date","author_id","ok","Error","alert","err","console","error","onSubmit","children","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/USER/Work/UNI/serverside CW2/react app/src/pages/addblog.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst AddBlog = () => {\r\n  const { user } = useAuth();\r\n\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    content: '',\r\n    country: '',\r\n    dateOfVisit: '',\r\n    userId: user.toke\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/blogs/add', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          title: formData.title,\r\n          content: formData.content,\r\n          country: formData.country,\r\n          visit_date: formData.dateOfVisit,\r\n          author_id: formData.userId\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to add blog post.');\r\n      }\r\n\r\n      alert('Blog post added!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Error adding blog post.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input name=\"title\" placeholder=\"Title\" onChange={handleChange} required />\r\n      <textarea name=\"content\" placeholder=\"Content\" onChange={handleChange} required />\r\n      <input name=\"country\" placeholder=\"Country\" onChange={handleChange} required />\r\n      <input type=\"date\" name=\"dateOfVisit\" onChange={handleChange} required />\r\n      <input name=\"userId\" placeholder=\"User ID\" onChange={handleChange} required />\r\n      <button type=\"submit\">Add Blog Post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddBlog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}